# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                              controllers.Application.index

# Account controllers

# Accounts
POST    /api/v1.0/accounts               controllers.account.AccountController.create
GET     /api/v1.0/accounts/:accId        controllers.account.AccountController.find(accId: String)
DELETE  /api/v1.0/accounts/:accId        controllers.account.AccountController.delete(accId: String)
GET     /api/v1.0/accounts/:accId/log    controllers.account.AccountLogController.find(accId: String, limit: Option[Int])

# Account Other
POST    /api/v1.0/callbacks              controllers.account.CallbackController.callback

# Auth tokens
GET     /api/v1.0/tokens                         controllers.account.TokenController.find(userId: Option[String])
POST    /api/v1.0/tokens                         controllers.account.TokenController.create
PUT     /api/v1.0/token/:jwt                     controllers.account.TokenController.extend(jwt: String)
DELETE  /api/v1.0/token/:jwt                     controllers.account.TokenController.delete(jwt: String)

# Account Users
POST    /api/v1.0/accounts/:accId/users              controllers.account.AccountUserController.create(accId: String)
GET     /api/v1.0/accounts/:accId/users/:usrId       controllers.account.AccountUserController.find(accId: String, usrId: String)
PUT     /api/v1.0/accounts/:accId/users/:usrId       controllers.account.AccountUserController.update(accId: String, usrId: String)
DELETE  /api/v1.0/accounts/:accId/users/:usrId       controllers.account.AccountUserController.delete(accId: String, usrId: String)

# Account Domains
GET     /api/v1.0/accounts/:accId/domains             controllers.account.AccountDomainController.findAll(accId: String)
POST    /api/v1.0/accounts/:accId/domains             controllers.account.AccountDomainController.create(accId: String)
GET     /api/v1.0/accounts/:accId/domains/:domIdn     controllers.account.AccountDomainController.find(accId: String, domIdn: String)
DELETE  /api/v1.0/accounts/:accId/domains/:domIdn     controllers.account.AccountDomainController.delete(accId: String, domIdn: String)

# Domain controllers

# Templates
POST    /api/v1.0/:domIdn/templates                controllers.domain.TemplateController.create(domIdn: String)
GET     /api/v1.0/:domIdn/templates/:tplId/:env    controllers.domain.TemplateController.find(domIdn: String, tplId: String, env: String)
PUT     /api/v1.0/:domIdn/templates/:tplId/:env    controllers.domain.TemplateController.update(domIdn: String, tplId: String, env: String)
DELETE  /api/v1.0/:domIdn/templates/:tplId/:env    controllers.domain.TemplateController.delete(domIdn: String, tplId: String, env: String, deployedAt: Option[Long])

# Messages
POST    /api/v1.0/:domIdn/messages           controllers.domain.MessageController.create(domIdn: String)
GET     /api/v1.0/:domIdn/messages/:msgId    controllers.domain.MessageController.find(domIdn: String, msgId: String)
DELETE  /api/v1.0/:domIdn/messages/:msgId    controllers.domain.MessageController.delete(domIdn: String, msgId: String)

# Message Log
GET     /api/v1.0/:domIdn/logs               controllers.domain.MessageLogController.find(domIdn: String, beforeMls: Option[Long], limit: Option[Int])

# Message Stats
GET     /api/v1.0/:domIdn/stats              controllers.domain.MessageStatController.find(domIdn: String, beforeMls: Option[Long], limit: Option[Int])

# Message Boxes
GET     /api/v1.0/:domIdn/boxes              controllers.box.BoxController.findAll(domIdn: String)
POST    /api/v1.0/:domIdn/boxes              controllers.box.BoxController.create(domIdn: String)
GET     /api/v1.0/:domIdn/boxes/:boxId       controllers.box.BoxController.find(domIdn: String, boxId: String)
DELETE  /api/v1.0/:domIdn/boxes/:boxId       controllers.box.BoxController.delete(domIdn: String, boxId: String)

# Folders
GET     /api/v1.0/:domIdn/boxes/:boxId/folders          controllers.box.FolderController.findAll(domIdn: String, boxId: String)
POST    /api/v1.0/:domIdn/boxes/:boxId/folders          controllers.box.FolderController.create(domIdn: String, boxId: String)
GET     /api/v1.0/:domIdn/boxes/:boxId/folders/:folderId  controllers.box.FolderController.find(domIdn: String, boxId: String, folderId: String)
DELETE  /api/v1.0/:domIdn/boxes/:boxId/folders/:folderId  controllers.box.FolderController.delete(domIdn: String, boxId: String, folderId: String)

# Folder MessageRefs
GET     /api/v1.0/:domIdn/boxes/:boxId/folders/:folderId/messages         controllers.box.MessageRefController.findAll(domIdn: String, boxId: String, folderId: String)
POST    /api/v1.0/:domIdn/boxes/:boxId/folders/:folderId/messages         controllers.box.MessageRefController.create(domIdn: String, boxId: String, folderId: String)
GET     /api/v1.0/:domIdn/boxes/:boxId/folders/:folderId/messages/:msgId  controllers.box.MessageRefController.find(domIdn: String, boxId: String, folderId: String, msgId: String)
PUT     /api/v1.0/:domIdn/boxes/:boxId/folders/:folderId/messages/:msgId  controllers.box.MessageRefController.update(domIdn: String, boxId: String, folderId: String, msgId: String)
DELETE  /api/v1.0/:domIdn/boxes/:boxId/folders/:folderId/messages/:msgId  controllers.box.MessageRefController.delete(domIdn: String, boxId: String, folderId: String, msgId: String)


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                 controllers.Assets.at(path="/public", file)
